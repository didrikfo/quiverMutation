from quiverExamples import *
from quiverMutation import *

pathAlg = pathAlgebraClass.PathAlgebra()
pathAlg.add_paths_from([[1,2,3,4,5,6,7]])
pathAlg.add_rels_from([[[1,2,3,4,5]],[[4,5,6,7]]])#
mutationVertexList = [3,2,1,5,1,2,3,4]
firstDisplayedStep = 0 
quiverMutation(pathAlg, mutationVertexList, firstDisplayedStep)

# Set firstDisplayedStep to k to skip displaying the quivers for the k first steps of the mutation graphically.
# Default is 0, which displays all steps. Set to len(mutationVertexList) to display only the final result.

# Quivers are given by the following:
# - Vertices are given as integers.
# - An arrows is given by a tuple containing 3 integers: (startVertex, endVertex, key).
#     - key is used to distinguish multiple arrows between the same pair of vertices. It is 0 if there is only one such
#       arrow, and it can usually be ignored.
# - A path is a list which contains all the vertices that path touches, in order.
# - A relation is given as a list of paths with the same start and end point, so a list of lists.
#   This is interpreted as the sum of these paths equalling zero. Coefficients are not supported.

# See the file quiverExamples.py for more details and examples